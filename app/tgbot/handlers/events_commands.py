from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from app.tgbot.keyboards.users_board import event_board, main_user_board
from app.infrastructure.database.database.db import DB
import pandas as pd
from datetime import datetime
from aiogram.types import Message, FSInputFile
from app.models.basemodels import EventModel
from app.tgbot.utils.file_management import get_pdf_path
from aiogram_calendar import SimpleCalendar, SimpleCalendarCallback
import os

menu_events = Router()

@menu_events.message(F.text == '–°–æ–±—ã—Ç–∏–µ –Ω–∞ –¥–∞—Ç—É üìÖ')
async def date_events(message: Message):
    await message.answer(text='–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É',
                         reply_markup=await SimpleCalendar().start_calendar())

@menu_events.message(F.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ —Å–æ–±—ã—Ç–∏—è')
async def show_events(message: Message, db: DB):

    event_load: EventModel | None = await db.events.load_events(user_id=message.from_user.id)
    columns = [
            "–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞",
            "–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è",
            "–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è",
            "–í—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è",
            "–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è",
            "–û–ø–∏—Å–∞–Ω–∏–µ"
        ]

    # –°–æ–∑–¥–∞–Ω–∏–µ DataFrame
    df = pd.DataFrame(event_load, columns=columns)
    df_message = df[['–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è']]
    pdf_path = get_pdf_path(df)

    await message.answer(text=f"<pre>{df_message.to_string(index=False,header=False)}</pre>", parse_mode='HTML')
    # –û—Ç–ø—Ä–∞–≤–∫–∞ PDF-—Ñ–∞–π–ª–∞
    await message.answer_document(document=FSInputFile(pdf_path))

    # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
    os.remove(pdf_path)

@menu_events.message(F.text == '–ù–∞–∑–∞–¥ ‚¨ÖÔ∏è')
async def back_events(message: Message):
    await message.answer(text='–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                         reply_markup=main_user_board())
